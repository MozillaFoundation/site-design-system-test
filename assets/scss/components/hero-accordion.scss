@use "sass:math";

.hero-accordion {
  $expanded-panel-width: 60vw;
  $expanded-panel-ratio: 16 / 9;

  $panel-transitions: (
    expand: (
      duration: 1s,
      timing: cubic-bezier(0.7, 0, 0.15, 1)
    ),
    collapse: (
      duration: 1s,
      timing: cubic-bezier(0.7, 0, 0.15, 1)
    )
  );
  $expand: map-get($panel-transitions, expand);
  $collapse: map-get($panel-transitions, collapse);

  @function expanded-panel-width($fraction: 1) {
    @return calc(#{$expanded-panel-width} * #{$fraction});
  }

  background: white;
  max-width: 100%;
  width: 100vw;
  display: flex;
  overflow: hidden;
  gap: 1rem;
  height: calc($expanded-panel-width / $expanded-panel-ratio);

  .panel {
    cursor: pointer;
    background-size: cover;
    background-position: center;
    padding: 0;
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;

    flex: 1;
    transition: flex map-get($expand, duration) map-get($expand, timing);

    &[aria-selected="true"] {
      flex: 0 0 expanded-panel-width();
      transition: flex map-get($collapse, duration) map-get($collapse, timing);

      .panel-content {
        .text-content {
          transform: translateX(-100%);

          .inner {
            transform: translateX(0);
            transition: transform map-get($collapse, duration) map-get($collapse, timing);
          }
        }

        .image-content {
          width: 50%;
          filter: brightness(100%);
          transition: filter map-get($collapse, duration) map-get($collapse, timing);
        }
      }
    }

    .panel-content {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: end;
      overflow: hidden;
      position: relative;

      .text-content {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        background: black;
        color: white;
        position: absolute;
        top: 0;
        right: 0;

        transform: translateX(0%);
        transition: transform map-get($expand, duration) map-get($expand, timing);

        padding: 1rem;
        width: expanded-panel-width(0.5);
        height: 100%;

        .inner {
          transform: translateX(-100%);
          transition: transform map-get($expand, duration) map-get($expand, timing);
        }
      }

      .image-content {
        transition: width map-get($expand, duration) map-get($expand, timing);
        background-position: center center;
        background-repeat: no-repeat;
        background-size: cover;
        z-index: 2;
        width: 100%;
        filter: brightness(50%);
        transition: filter map-get($expand, duration) map-get($expand, timing);

        &.badge {
          background-image: url("../../assets/images/2024_MozFestHouseAmsterdam_Badge.jpg");
        }

        &.volunteer {
          background-image: url("../../assets/images/2024_MozFestHouseAmsterdam_Volunteers.jpg");
        }
      }
    }

    .video-cover {
      position: absolute;
      top: 50%;
      left: 50%;
      width: calc(100% * #{$expanded-panel-ratio}); // to "cover" 100% height
      height: 100%;
      transform: translate(-50%, -50%);
      pointer-events: none; // optional: disables interaction if you want video as background only

      iframe {
        width: 100%;
        height: 100%;
        border: 0;
      }
    }
  }

  @include breakpoint(small down) {
    flex-direction: column;
    height: auto;

    .panel {
      flex: auto;

      &[aria-selected="true"] {
        flex: auto;
      }

      .panel-content {
        height: auto;
        aspect-ratio: 16 / 9;
      }
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .panel,
    .text-content,
    .image-content {
      transition: none !important;
    }
  }
}
